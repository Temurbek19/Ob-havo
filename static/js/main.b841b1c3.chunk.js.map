{"version":3,"sources":["components/ActiveCityBtn/index.js","components/ActiveCityBtn/ActiveCityBtn.js","container/CitySwitcher/CitySwitcher.js","container/CitySwitcher/index.js","assets/Icon/Clear.svg","assets/Icon/Atmosphere.svg","assets/Icon/Thunderstrom.svg","assets/Icon/Drizzle.svg","assets/Icon/Rain.svg","assets/Icon/Snow.svg","assets/Icon/Cloud.svg","helpers/WeatherCodeParsa/index.js","helpers/WeatherCodeParsa/WeatherCodeParsa.js","pages/HomePage/index.js","pages/HomePage/HomePage.js","pages/SingleCityPage/index.js","pages/SingleCityPage/SingleCityPage.js","container/Header/index.js","container/Header/Header.js","App.js","index.js"],"names":["ActiveCityBtn","cityName","onClick","active","className","citiesArr","CitySwitcher","activeCity","setActiveCity","map","city","index","WeatherCodeParsa","weatherCode","Thunderstrom","Drizzle","Rain","Snow","Atmosphere","Clear","Cloud","HomePage","useState","isFachet","data","error","activeWeather","setActiveWeather","useEffect","axios","get","params","q","appid","units","then","response","catch","name","src","WeatherCodeParse","list","weather","id","Math","ceil","main","temp","dt_txt","SingleCityPage","Header","searchText","setSearchText","isFetchet","weatherInfo","setWeatherInfo","type","placeholder","value","onChange","e","target","length","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAEeA,ECAO,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,OACvC,OACQ,wBACIC,UAAS,4BAAuBD,EAAS,SAAW,IACpDD,QAASA,EAFb,SAGED,KCHRI,G,MAAY,CACd,WACA,OACA,OACA,QACA,MACA,SACA,SACA,QACA,WCXWC,EDcM,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,cAC/B,OACI,qBAAKJ,UAAU,gBAAf,SAGIC,EAAUI,KAAI,SAACC,EAAMC,GAAP,OACV,cAAC,EAAD,CACIV,SAAUS,EAEVR,QAAS,kBAAMM,EAAcE,IAC7BP,OAAQI,GAAcG,GAFjBC,SExBV,MAA0B,kCCA1B,MAA0B,uCCA1B,MAA0B,yCCA1B,MAA0B,oCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,kCCE1BC,ECMU,SAACC,GACtB,QAAO,GACC,KAAK,KAAOA,GAAeA,GAAe,IACtC,OAAOC,EACX,KAAK,KAAOD,GAAeA,GAAe,IACtC,OAAOE,EACX,KAAK,KAAOF,GAAeA,GAAe,IACtC,OAAOG,EACX,KAAK,KAAOH,GAAeA,GAAe,IACtC,OAAOI,EACX,KAAK,KAAOJ,GAAeA,GAAe,IACtC,OAAOK,EACX,KAAK,KAAOL,EACR,OAAOM,EACX,KAAK,KAAON,GAAeA,GAAe,IACtC,OAAOO,EACX,QACI,MAAO,2BCvBRC,G,MCOE,WAAO,IAAD,EAEiBC,mBAAS,YAF1B,mBAEZf,EAFY,KAEAC,EAFA,OAGuBc,mBAAS,CAC/CC,UAAU,EACVC,KAAM,GACNC,MAAO,OANQ,mBAGZC,EAHY,KAGGC,EAHH,KAwCnB,OAJAC,qBAAU,WA1BNC,IAAMC,IAAI,mDAAoD,CAC1DC,OAAQ,CACJC,EAAGzB,EACH0B,MAAO,mCACPC,MAAO,YAGdC,MAAK,SAAUC,GACZT,EAAiB,CACbJ,UAAU,EACVC,KAAMY,EAASZ,KACfC,OAAO,OAGdY,OAAM,SAAUZ,GACbE,EAAiB,CACbJ,UAAU,EACVC,KAAM,GACNC,MAAOA,OAGdU,MAAK,iBAOP,CAAC5B,IAGA,sBAAKH,UAAU,OAAf,UAEI,cAAC,EAAD,CAAcI,cAAeA,EAAeD,WAAYA,IAExD,qBAAKH,UAAU,OAAf,SAEQsB,EAAcH,SACV,sBAAKnB,UAAU,YAAf,UACI,oBAAIA,UAAU,YAAd,SAA2BsB,EAAcF,KAAKd,KAAK4B,OACnD,sBAAKlC,UAAU,eAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAemC,IAAKC,EAAiBd,EAAcF,KAAKiB,KAAK,GAAGC,QAAQ,GAAGC,MAC1F,+BAEQC,KAAKC,KAAKnB,EAAcF,KAAKiB,KAAK,GAAGK,KAAKC,MAFlD,YAKA,6BACKrB,EAAcF,KAAKiB,KAAK,GAAGO,YAGpC,sBAAK5C,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAemC,IAAKC,EAAiBd,EAAcF,KAAKiB,KAAK,GAAGC,QAAQ,GAAGC,MAC1F,+BAEQC,KAAKC,KAAKnB,EAAcF,KAAKiB,KAAK,GAAGK,KAAKC,MAFlD,YAKA,6BACKrB,EAAcF,KAAKiB,KAAK,GAAGO,YAGpC,sBAAK5C,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAemC,IAAKC,EAAiBd,EAAcF,KAAKiB,KAAK,IAAIC,QAAQ,GAAGC,MAC3F,+BAEQC,KAAKC,KAAKnB,EAAcF,KAAKiB,KAAK,IAAIK,KAAKC,MAFnD,YAKA,6BACKrB,EAAcF,KAAKiB,KAAK,IAAIO,YAGrC,sBAAK5C,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAemC,IAAKC,EAAiBd,EAAcF,KAAKiB,KAAK,IAAIC,QAAQ,GAAGC,MAC3F,+BAEQC,KAAKC,KAAKnB,EAAcF,KAAKiB,KAAK,IAAIK,KAAKC,MAFnD,YAKA,6BACKrB,EAAcF,KAAKiB,KAAK,IAAIO,YAGrC,sBAAK5C,UAAU,MAAf,UACA,qBAAKA,UAAU,eAAemC,IAAKC,EAAiBd,EAAcF,KAAKiB,KAAK,IAAIC,QAAQ,GAAGC,MAC3F,+BAEQC,KAAKC,KAAKnB,EAAcF,KAAKiB,KAAK,IAAIK,KAAKC,MAFnD,YAKA,6BACKrB,EAAcF,KAAKiB,KAAK,IAAIO,YAGjC,sBAAK5C,UAAU,MAAf,UACI,qBAAKA,UAAU,eAAemC,IAAKC,EAAiBd,EAAcF,KAAKiB,KAAK,IAAIC,QAAQ,GAAGC,MAC3F,+BAEQC,KAAKC,KAAKnB,EAAcF,KAAKiB,KAAK,IAAIK,KAAKC,MAFnD,YAKA,6BACKrB,EAAcF,KAAKiB,KAAK,IAAIO,kBAM7C,mDC/HTC,ECFQ,WACnB,OACI,wBCAOC,G,MCGA,WAAO,IAAD,EAEmB5B,mBAAS,IAF5B,mBAEV6B,EAFU,KAEEC,EAFF,OAGqB9B,mBAAS,CAC3C+B,WAAW,EACXf,KAAM,GACNI,QAAS,GACTK,KAAM,GACNtB,MAAO,OARM,mBAGV6B,EAHU,KAGGC,EAHH,KA8CjB,OAJA3B,qBAAU,WA9BNC,IAAMC,IAAI,kDAAmD,CACzDC,OAAQ,CACJC,EAAGmB,EACHlB,MAAO,mCACPC,MAAO,YAGdC,MAAK,SAAUC,GACZmB,EAAe,CACXhC,UAAU,EACVe,KAAMF,EAASZ,KAAKc,KACpBI,QAASN,EAASZ,KAAKkB,QACvBK,KAAMX,EAASZ,KAAKsB,KACpBrB,OAAO,OAGdY,OAAM,SAAUZ,GACb8B,EAAe,CACXhC,UAAU,EACVe,KAAM,GACNI,QAAS,GACTK,KAAM,GACNtB,MAAOA,OAGdU,MAAK,iBAOP,CAACgB,IAGA,yBAAQ/C,UAAU,SAAlB,UACI,wCAEA,sBAAKA,UAAU,eAAf,UACI,uBAAOoD,KAAK,OACRC,YAAY,iBACZC,MAAOP,EACPQ,SAAU,SAACC,GAAD,OAAOR,EAAcQ,EAAEC,OAAOH,UAGpCP,EAAWW,OAAS,EAChB,qBAAK1D,UAAU,gBAAf,SAEIkD,EAAY/B,SACR,qBAAKnB,UAAU,qBAAf,SAEQkD,EAAYZ,QAAQoB,OAAS,EACzB,sBAAK1D,UAAU,GAAf,UACI,6BAAKkD,EAAYhB,OACjB,+BAAKgB,EAAYP,KAAKA,KAAtB,eAGJ,kDAKZ,8CAKR,gCC3DbgB,MAdf,WACE,OACE,eAAC,IAAD,WAEE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW7C,IACjC,cAAC,IAAD,CAAO2C,OAAK,EAACC,KAAK,kBAAkBC,UAAWjB,W,MCbvDkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b841b1c3.chunk.js","sourcesContent":["import ActiveCityBtn from './ActiveCityBtn';\r\n\r\nexport default ActiveCityBtn;","import './ActiveCityBtn.scss';\r\n\r\nconst ActiveCityBtn = ({cityName, onClick, active}) => {\r\n    return(\r\n            <button\r\n                className={`city-switcher-btn ${active ? 'active' : ''}`}\r\n                onClick={onClick}\r\n            >{cityName}</button>\r\n    )\r\n}\r\n\r\nexport default ActiveCityBtn;","import ActiveCityBtn  from '../../components/ActiveCityBtn';\r\n\r\nimport './CitySwitcher.scss';\r\n\r\nconst citiesArr = [\r\n    'tashkent',\r\n    'seul',\r\n    'oslo',\r\n    'paris',\r\n    'rim',\r\n    'moscow',\r\n    'canada',\r\n    'minsk',\r\n    'berlin'\r\n];\r\n\r\nconst CitySwitcher = ({activeCity, setActiveCity}) => {\r\n    return(\r\n        <div className=\"city-switcher\">\r\n        \r\n        {\r\n            citiesArr.map((city, index) => (\r\n                <ActiveCityBtn\r\n                    cityName={city}\r\n                    key={index}\r\n                    onClick={() => setActiveCity(city)} \r\n                    active={activeCity == city}\r\n                    />\r\n            ))\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CitySwitcher;","import CitySwitcher from './CitySwitcher';\r\n\r\nexport default CitySwitcher;","export default __webpack_public_path__ + \"static/media/Clear.f287b3b2.svg\";","export default __webpack_public_path__ + \"static/media/Atmosphere.2d361135.svg\";","export default __webpack_public_path__ + \"static/media/Thunderstrom.28a7ec1b.svg\";","export default __webpack_public_path__ + \"static/media/Drizzle.82db518e.svg\";","export default __webpack_public_path__ + \"static/media/Rain.6dcfb8a4.svg\";","export default __webpack_public_path__ + \"static/media/Snow.790a7333.svg\";","export default __webpack_public_path__ + \"static/media/Cloud.f8218436.svg\";","import WeatherCodeParsa from './WeatherCodeParsa';\r\n\r\nexport default WeatherCodeParsa;","import Clear from '../../assets/Icon/Clear.svg';\r\nimport Atmosphere from '../../assets/Icon/Atmosphere.svg';\r\nimport Thunderstrom from '../../assets/Icon/Thunderstrom.svg';\r\nimport Drizzle from '../../assets/Icon/Drizzle.svg';\r\nimport Rain from '../../assets/Icon/Rain.svg';\r\nimport Snow from '../../assets/Icon/Snow.svg';\r\nimport Cloud from '../../assets/Icon/Cloud.svg';\r\n\r\nconst WeatherCodeParsa = (weatherCode) => {\r\n    switch(true) {\r\n            case 200 <= weatherCode && weatherCode <= 232:\r\n                return Thunderstrom;\r\n            case 300 <= weatherCode && weatherCode <= 321:\r\n                return Drizzle;\r\n            case 500 <= weatherCode && weatherCode <= 521:\r\n                return Rain;\r\n            case 600 <= weatherCode && weatherCode <= 622:\r\n                return Snow;\r\n            case 701 <= weatherCode && weatherCode <= 781:\r\n                return Atmosphere;\r\n            case 800 == weatherCode:\r\n                return Clear;\r\n            case 801 <= weatherCode && weatherCode <= 804:\r\n                return Cloud;\r\n            default:\r\n                return 'Zato osmonimiz musaffo';\r\n        }\r\n}\r\n\r\nexport default WeatherCodeParsa;","import HomePage from './HomePage';\r\n\r\nexport default HomePage;","import {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport CitySwitcher from '../../container/CitySwitcher';\r\n\r\nimport WeatherCodeParse from '../../helpers/WeatherCodeParsa';\r\n\r\nimport './HomePage.scss';\r\n\r\nconst HomePage = () => {\r\n\r\n    const [activeCity, setActiveCity] = useState('tashkent');\r\n    const [activeWeather, setActiveWeather] = useState({\r\n        isFachet: false,\r\n        data: {},\r\n        error: null\r\n    })\r\n\r\n    const fetchWeatherInfo = () => {\r\n        axios.get('https://api.openweathermap.org/data/2.5/forecast', {\r\n            params: {\r\n                q: activeCity,\r\n                appid: '25d70e7e4d3a402638d192b0000714fc',\r\n                units: 'metric'\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            setActiveWeather({\r\n                isFachet: true,\r\n                data: response.data,\r\n                error: false\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            setActiveWeather({\r\n                isFachet: true,\r\n                data: {},\r\n                error: error\r\n            })\r\n        })\r\n        .then(function () {\r\n    // always executed\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchWeatherInfo();\r\n    }, [activeCity])\r\n\r\n    return(\r\n        <div className=\"city\">\r\n\r\n            <CitySwitcher setActiveCity={setActiveCity} activeCity={activeCity}/>\r\n\r\n            <div className=\"text\">\r\n                {\r\n                    activeWeather.isFachet ? (\r\n                        <div className=\"text-item\">\r\n                            <h1 className=\"city-name\">{activeWeather.data.city.name}</h1>\r\n                            <div className=\"weather-days\">\r\n                                <div className=\"day\">\r\n                                    <img className=\"weather-icon\" src={WeatherCodeParse(activeWeather.data.list[0].weather[0].id)}/>\r\n                                    <h1>\r\n                                        {\r\n                                            Math.ceil(activeWeather.data.list[0].main.temp)\r\n                                        } °C\r\n                                    </h1>\r\n                                    <h3>\r\n                                        {activeWeather.data.list[0].dt_txt}\r\n                                    </h3>\r\n                                </div>\r\n                                <div className=\"day\">\r\n                                    <img className=\"weather-icon\" src={WeatherCodeParse(activeWeather.data.list[6].weather[0].id)}/>\r\n                                    <h1>\r\n                                        {\r\n                                            Math.ceil(activeWeather.data.list[6].main.temp)\r\n                                        } °C\r\n                                    </h1>\r\n                                    <h3>\r\n                                        {activeWeather.data.list[6].dt_txt}\r\n                                    </h3>\r\n                                </div>\r\n                                <div className=\"day\">\r\n                                    <img className=\"weather-icon\" src={WeatherCodeParse(activeWeather.data.list[14].weather[0].id)}/>\r\n                                    <h1>\r\n                                        {\r\n                                            Math.ceil(activeWeather.data.list[14].main.temp)\r\n                                        } °C\r\n                                    </h1>\r\n                                    <h3>\r\n                                        {activeWeather.data.list[14].dt_txt}\r\n                                    </h3>\r\n                                </div>\r\n                                <div className=\"day\">\r\n                                    <img className=\"weather-icon\" src={WeatherCodeParse(activeWeather.data.list[22].weather[0].id)}/>\r\n                                    <h1>\r\n                                        {\r\n                                            Math.ceil(activeWeather.data.list[22].main.temp)\r\n                                        } °C\r\n                                    </h1>\r\n                                    <h3>\r\n                                        {activeWeather.data.list[22].dt_txt}\r\n                                    </h3>\r\n                                </div>\r\n                                <div className=\"day\">\r\n                                <img className=\"weather-icon\" src={WeatherCodeParse(activeWeather.data.list[30].weather[0].id)}/>\r\n                                <h1>\r\n                                    {\r\n                                        Math.ceil(activeWeather.data.list[30].main.temp)\r\n                                    } °C\r\n                                </h1>\r\n                                <h3>\r\n                                    {activeWeather.data.list[30].dt_txt}\r\n                                </h3>\r\n                                </div>\r\n                                <div className=\"day\">\r\n                                    <img className=\"weather-icon\" src={WeatherCodeParse(activeWeather.data.list[37].weather[0].id)}/>\r\n                                    <h1>\r\n                                        {\r\n                                            Math.ceil(activeWeather.data.list[37].main.temp)\r\n                                        } °C\r\n                                    </h1>\r\n                                    <h3>\r\n                                        {activeWeather.data.list[37].dt_txt}\r\n                                    </h3>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ) : (\r\n                        <h1>Loading...</h1>\r\n                    )\r\n                }\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import SingleCityPage from './SingleCityPage';\r\n\r\nexport default SingleCityPage;","const SingleCityPage = () => {\r\n    return(\r\n        <h1></h1>\r\n    )\r\n}\r\n\r\nexport default SingleCityPage;","import Header from './Header';\r\n\r\nexport default Header;","import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport './Header.scss';\r\n\r\nconst Header = () => {\r\n\r\n    const [searchText, setSearchText] = useState('');\r\n    const [weatherInfo, setWeatherInfo] = useState({\r\n        isFetchet: false,\r\n        name: '',\r\n        weather: [],\r\n        temp: {},\r\n        error: null\r\n    });\r\n\r\n    const fetchWeatherInfo = () => {\r\n        axios.get('https://api.openweathermap.org/data/2.5/weather', {\r\n            params: {\r\n                q: searchText,\r\n                appid: '25d70e7e4d3a402638d192b0000714fc',\r\n                units: 'metric'\r\n            }\r\n        })\r\n        .then(function (response) {\r\n            setWeatherInfo({\r\n                isFachet: true,\r\n                name: response.data.name,\r\n                weather: response.data.weather,\r\n                temp: response.data.main,\r\n                error: false\r\n            })\r\n        })\r\n        .catch(function (error) {\r\n            setWeatherInfo({\r\n                isFachet: true,\r\n                name: '',\r\n                weather: [],\r\n                temp: {},\r\n                error: error\r\n            })\r\n        })\r\n        .then(function () {\r\n    // always executed\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchWeatherInfo();\r\n    }, [searchText])\r\n\r\n    return(\r\n        <header className=\"header\">\r\n            <h1>Header</h1>\r\n\r\n            <div className=\"search-input\">\r\n                <input type=\"text\"\r\n                    placeholder=\"Find your city\"\r\n                    value={searchText}\r\n                    onChange={(e) => setSearchText(e.target.value)}/>\r\n\r\n                    {\r\n                        searchText.length > 1 ? (\r\n                            <div className=\"search-result\">\r\n                            {\r\n                                weatherInfo.isFachet ? (\r\n                                    <div className=\"search-result-card\">\r\n                                        {\r\n                                            weatherInfo.weather.length > 0 ? (\r\n                                                <div className=\"\">\r\n                                                    <h3>{weatherInfo.name}</h3>\r\n                                                    <h3>{weatherInfo.temp.temp} °C</h3>\r\n                                                </div>\r\n                                            ) : (\r\n                                                <h3>City not found</h3>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                ) : (\r\n                                    <h5>Loading...</h5>\r\n                                )\r\n                            }\r\n                        </div>\r\n                        ) : (\r\n                            <div></div>\r\n                        )\r\n                    }\r\n                \r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport HomePage from './pages/HomePage';\nimport SingleCityPage from './pages/SingleCityPage';\n\nimport Header from './container/Header';\n\nfunction App() {\n  return (\n    <Router>\n\n      <Header/>\n\n      <Switch>\n        <Route exact path=\"/\" component={HomePage}/>\n        <Route exact path=\"/city/:cityName\" component={SingleCityPage}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './assets/main.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}